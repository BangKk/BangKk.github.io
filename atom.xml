<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BangKk</title>
  <subtitle>前端 | JavaScript | HTML | CSS | 生活 | 学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bangkk.github.io/"/>
  <updated>2016-11-04T17:21:59.030Z</updated>
  <id>https://bangkk.github.io/</id>
  
  <author>
    <name>BangKk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理解Angular启动过程</title>
    <link href="https://bangkk.github.io/2016/11/04/learn-angular-bootstrap/"/>
    <id>https://bangkk.github.io/2016/11/04/learn-angular-bootstrap/</id>
    <published>2016-11-04T14:29:35.000Z</published>
    <updated>2016-11-04T17:21:59.030Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一张图理解Angular启动流程"><a href="#一张图理解Angular启动流程" class="headerlink" title="一张图理解Angular启动流程"></a>一张图理解Angular启动流程</h2><p><img src="http://og4g35bhc.bkt.clouddn.com/angular-startup.png" alt="Angular启动过程图"><br><a id="more"></a><br>这张图是Angular官网中开发指南的一张图，你可以在<a href="https://code.angularjs.org/1.3.8/docs/guide/bootstrap" target="_blank" rel="external">官方文档</a>上了解它。</p>
<p>接下来我们来一步步的了解它。</p>
<h2 id="一、下载资源"><a href="#一、下载资源" class="headerlink" title="一、下载资源"></a>一、下载资源</h2><p>当你跳转到一个页面时，浏览器首先会去下载这个HTML文件，同时，浏览器还是开启一些辅助线程去</p>
<p>下载相关联的文件（CSS,JS等文件）。</p>
<h2 id="二、构建DOM树"><a href="#二、构建DOM树" class="headerlink" title="二、构建DOM树"></a>二、构建DOM树</h2><p>在下载文件的同时，浏览器就会开始构建DOM树，DOM树中内嵌或引入的脚本也会开始执行。</p>
<h2 id="三、Angular初始化"><a href="#三、Angular初始化" class="headerlink" title="三、Angular初始化"></a>三、Angular初始化</h2><p>浏览器会根据加载脚本的顺序去执行这些脚本。当执行到Angular.js时，Angular会执行如下步骤：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.angular.bootstrap) &#123;<span class="comment">//检查是不是多次启动/导入angular.js</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'WARNING: Tried to load angular more than once.'</span>);</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">bindJQuery();<span class="comment">//如果在Angular加载之前引入了jQuery则用jQuery，否则用Angular内置的jqlite</span></div><div class="line"></div><div class="line">publishExternalAPI(angular);<span class="comment">//对angular对象绑定ng发布的方法</span></div><div class="line"></div><div class="line">jqLite(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    angularInit(<span class="built_in">document</span>, bootstrap);<span class="comment">//将启动代码挂载到document对象的DOMContentLoaded事件中</span></div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
<p>然后继续执行其他的脚本。</p>
<p><strong>注意：</strong> 在实际项目中，其他的脚本一般指自己Angular代码或者第三方库，这些Angular模块的初始化步骤大概是这样的：</p>
<ul>
<li>按名字创建模块，并在这个模块中注册各种Angular对象，如Controller，Service等，形成注册表；</li>
<li>注册“config回调函数”，它将在模块被初始化时执行；</li>
<li>注册“run回调函数”，它将在模块初始化完毕时执行；</li>
</ul>
<p>当DOM构建完毕时，就会触发document的DOMContentLoaded事件，并执行Angular的启动代码。</p>
<h2 id="四、Angular启动"><a href="#四、Angular启动" class="headerlink" title="四、Angular启动"></a>四、Angular启动</h2><p>Angular首先会去页面中找到第一个带有<code>ng-app</code>的节点，然后调用<code>angular.bootstrap</code>方法，</p>
<p>将该节点作为模块的根节点。刚刚所说的是Angular推荐的自启动方式，当然你也可以采用手动</p>
<p><code>angular.bootstrap</code>方式来启动。</p>
<h2 id="五、加载-启动子模块"><a href="#五、加载-启动子模块" class="headerlink" title="五、加载 / 启动子模块"></a>五、加载 / 启动子模块</h2><p>在这一步之前，DOM还没有和模型之间建立关联，所以它还是<code>Static DOM</code>。</p>
<p>而在这个阶段中，Angular会做以下几件事：</p>
<ol>
<li>创建一个注入器（injector），并关联到所在的节点上（带有<code>ng-app</code>的节点）。</li>
<li>按顺序执行所有的“config回调函数”</li>
<li>执行所有“run回调函数”</li>
</ol>
<p><strong>注意：</strong> 前面注册的Angular对象只有通过注入器注入到模块中才能使用。在config回调函数中能够使用的</p>
<p>只有注册的常量<code>Constant</code>对象和<code>Provider</code>类，这个阶段是程序中唯一能通过<code>Provider</code>类来配置服务</p>
<p>的地方。我们对<code>$routeProvider</code>的配置就是在这个阶段完成的。</p>
<h2 id="六、渲染页面"><a href="#六、渲染页面" class="headerlink" title="六、渲染页面"></a>六、渲染页面</h2><p>接下来，将由路由模块获得控制权。通过<code>$location</code>服务来解析当前页面的URL，然后通过我们之前配</p>
<p>置的路由映射表找到对应的模板，控制器。</p>
<p>路由模块首先会创建一个scope对象，加载模板并将它传给<code>$compile</code>对象，<code>$compile</code>会将它解析成静</p>
<p>态DOM树，然后扫描这颗树，找到节点中的指令，通过这些指令把DOM树和scope关联起来，最后将它</p>
<p>替换一个特定的指令，在<code>ui-router</code>中是<code>ui-view</code>。</p>
<h2 id="七、数据绑定和摘要循环（digest）"><a href="#七、数据绑定和摘要循环（digest）" class="headerlink" title="七、数据绑定和摘要循环（digest）"></a>七、数据绑定和摘要循环（digest）</h2><p>页面显示出来后，数据还没有渲染，Angular会自动使用scope中的数据渲染一次。</p>
<p>但是，如果用户修改了这些数据怎么办？在Angular中会采用脏检查机制。Angular将双向绑定转换为一</p>
<p>堆watch表达式后台递归检查这些watch表达式是否改变了，如果改变了，就执行相应的watcher函数，</p>
<p>直到model中的值不在变化，watcher函数不再触发。这时，浏览器就会重新渲染DOM。</p>
<p>至此，一个Angular程序就算启动成功了。</p>
<p>最近读完了<a href="https://book.douban.com/subject/26708133/" target="_blank" rel="external">AngularJS深度剖析与最佳实践</a>，是目前学习Angular1.X最有价值的一本书，如果你有一定</p>
<p>的Angular实践或者经验，这本书可以让你更深入了解Angular背后的原理和技巧。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li>[1] <a href="https://book.douban.com/subject/26708133/" target="_blank" rel="external">AngularJS深度剖析与最佳实践</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一张图理解Angular启动流程&quot;&gt;&lt;a href=&quot;#一张图理解Angular启动流程&quot; class=&quot;headerlink&quot; title=&quot;一张图理解Angular启动流程&quot;&gt;&lt;/a&gt;一张图理解Angular启动流程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://og4g35bhc.bkt.clouddn.com/angular-startup.png&quot; alt=&quot;Angular启动过程图&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>about me</title>
    <link href="https://bangkk.github.io/2016/10/29/about-me/"/>
    <id>https://bangkk.github.io/2016/10/29/about-me/</id>
    <published>2016-10-29T12:55:50.000Z</published>
    <updated>2016-10-30T06:22:55.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>本人网名<a href="https://github.com/BangKk" target="_blank" rel="external">BangKk</a>(注意：我不是vip，也不是SKT粉),大家可以叫我小K。</p>
<p>现在在成都一所普通二本院校读大四，软件工程专业（程序猿孵化基地），马上准备实习了。</p>
<h2 id="大学生活"><a href="#大学生活" class="headerlink" title="大学生活"></a>大学生活</h2><ul>
<li><p>大一：在LOL中帮助二区玩家戒掉网瘾。</p>
</li>
<li><p>大二：被Java多线程和网络编程戒掉网瘾，决定加入学校实验室学习编程，从此走上不归路。</p>
</li>
<li><p>大三：在老师和学长的帮助下，误入坑前端，从此与HTML，CSS，JavaScript结下友谊。</p>
</li>
<li><p>大四：“我要进BAT”-&gt;投简历-&gt;被打击…循环n次，最终妥协，将要在成都开始自己的工作生涯。</p>
</li>
</ul>
<a id="more"></a>
<h2 id="为什么选择前端？"><a href="#为什么选择前端？" class="headerlink" title="为什么选择前端？"></a>为什么选择前端？</h2><p>正如前面所说，大一对C语言的黑白框不感冒，在游戏中浑浑噩噩度过了自己的大一。大二接触到Java</p>
<p>的网络编程和多线程编程后，身体中涌现出一股敲代码的洪荒之力，加上自己不甘这样度过自己的大学</p>
<p>，最后决定加入学校的实验室，选择了JavaWeb方向，哪知这原来是一个纯前端的团队。就是这样一个</p>
<p>误打误撞的事情将我带到了前端这个方向，运气不错的是我对它非常感兴趣，再加上带我的那个学长很</p>
<p>不错，从此便决定入坑前端。</p>
<p>学习前端走走停停也有近两年的时间了，很多人吐槽前端变化太快，而我却喜欢这样的前端。因为它每</p>
<p>时每刻都在拥抱一些新的变化，这样其实能给开发者带来一些新鲜感和持续学习的动力。也正是因为这</p>
<p>些变化，我们有了更好的开发体验，接触到更多的领域，有了更高的视野，这对于程序员其实是一件很</p>
<p>好的事情。</p>
<h2 id="为什么会有这个博客？"><a href="#为什么会有这个博客？" class="headerlink" title="为什么会有这个博客？"></a>为什么会有这个博客？</h2><ul>
<li><p>你可以用照相机记录生活的瞬间，如果有文字描述那就更好了:)</p>
</li>
<li><p>开启 “前端小白成长” 模式 ~~</p>
</li>
<li><p>纸上得来终觉浅，绝知此事要躬行。</p>
</li>
</ul>
<h2 id="交个朋友"><a href="#交个朋友" class="headerlink" title="交个朋友"></a>交个朋友</h2><p>不论你是什么行业的，亦或是和我一样的学生，都欢迎大家来和我交个朋友 :)</p>
<p>您可以通过QQ找到我：710660249</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍&quot;&gt;&lt;/a&gt;简单介绍&lt;/h2&gt;&lt;p&gt;本人网名&lt;a href=&quot;https://github.com/BangKk&quot;&gt;BangKk&lt;/a&gt;(注意：我不是vip，也不是SKT粉),大家可以叫我小K。&lt;/p&gt;
&lt;p&gt;现在在成都一所普通二本院校读大四，软件工程专业（程序猿孵化基地），马上准备实习了。&lt;/p&gt;
&lt;h2 id=&quot;大学生活&quot;&gt;&lt;a href=&quot;#大学生活&quot; class=&quot;headerlink&quot; title=&quot;大学生活&quot;&gt;&lt;/a&gt;大学生活&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大一：在LOL中帮助二区玩家戒掉网瘾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大二：被Java多线程和网络编程戒掉网瘾，决定加入学校实验室学习编程，从此走上不归路。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大三：在老师和学长的帮助下，误入坑前端，从此与HTML，CSS，JavaScript结下友谊。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大四：“我要进BAT”-&amp;gt;投简历-&amp;gt;被打击…循环n次，最终妥协，将要在成都开始自己的工作生涯。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="关于我" scheme="https://bangkk.github.io/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
  </entry>
  
</feed>
